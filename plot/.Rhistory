#lasso penalty
plasso_fun <- function(x,lambda){
x <- abs(x)
res <- lambda*x
return(res)
}
#SCAD penalty
pSCAD_fun <- function(x,lambda,a){
x <- abs(x)
y <- numeric(length(x))
for(i in 1:length(x)){
if (x[i] <= lambda){
y[i] <- lambda*x[i]
}else if(lambda<x[i] & x[i]<=a*lambda){
y[i] <- -(x[i]^2-2*a*lambda*x[i]+lambda^2)/(2*(a-1))
}else{
y[i] <- (a+1)*lambda^2/2
}
}
return(y)
}
pMCP_fun <- function(x,lambda,a){
x <- abs(x)
y <- numeric(length(x))
for(i in 1:length(x)){
if (x[i] <= a*lambda){
y[i] <- lambda*x[i] - x[i]^2/(2*a)
}else{
y[i] <- 0.5*a*lambda^2
}
}
return(y)
}
#make plot
x <- seq(0.01,3,by=0.01)
lambda <- 1
a_SCAD <- 2.1
a_MCP <- 2
y_lasso <- plasso_fun(x,lambda)
y_SCAD <- pSCAD_fun(x,lambda,a_SCAD)
y_MCP <- pMCP_fun(x,lambda,a_MCP)
plot(x,y_lasso,type = "l",col=1,lty=1,
main = "penalty curve",xlab = "t",ylab="p_lambda(t)")
lines(x,y_SCAD,col=2,lty=2)
lines(x,y_MCP,col="blue",lty=3)
legend("topleft",c("LASSO","SCAD","MCP"),inset=.05,
lty=c(1,2,3), # gives the legend appropriate symbols (lines)
col=c(1,2,"blue"))
#lasso penalty
plasso_dev_fun <- function(x,lambda){
res <- rep(lambda,length(x))
return(res)
}
# define a positve function
positive_fun <- function(x){
len = length(x)
res <- numeric(len)
for(i in 1:len){
if (x[i]>0) res[i] <- x[i]
else res[i] <- 0
}
return(res)
}
#SCAD penalty
pSCAD_dev_fun <- function(x,lambda,a){
x <- abs(x)
y <- numeric(length(x))
for(i in 1:length(x)){
if (x[i] <= lambda){
y[i] <- lambda
}else{
num1 <- (a*lambda-x[i])
y[i] <- positive_fun(num1)/(a-1)
}
}
return(y)
}
pMCP_dev_fun <- function(x,lambda,a){
x <- abs(x)
y <- numeric(length(x))
for(i in 1:length(x)){
pos1 <- lambda - x[i]/a
y[i] <- positive_fun(pos1)
}
return(y)
}
#make plot
x <- seq(0.01,3,by=0.01)
lambda_dev <- 1
a_SCAD_dev <- 2.1
a_MCP_dev <- 2
y_lasso_dev <- plasso_dev_fun(x,lambda_dev)
y_SCAD_dev <- pSCAD_dev_fun(x,lambda_dev,a_SCAD_dev)
y_MCP_dev <- pMCP_dev_fun(x,lambda_dev,a_MCP_dev)
pdf("together.pdf")
par(mfrow=c(1,2))
plot(x,y_lasso,type = "l",col=1,lty=1,
main = "penalty curve",xlab = "t",ylab="p_lambda(t)")
lines(x,y_SCAD,col=2,lty=2)
lines(x,y_MCP,col="blue",lty=3)
legend("topleft",c("LASSO","SCAD","MCP"),inset=.05,
lty=c(1,2,3), # gives the legend appropriate symbols (lines)
col=c(1,2,"blue")) # gives the legend lines the correct color and width
###
plot(x,y_lasso_dev,type = "l",col=1,lty=1,
main = "penalty derivative curve",xlab = "t",ylab="p'_lambda(t)",ylim = c(0,3))
lines(x,y_SCAD_dev,col=2,lty=2)
lines(x,y_MCP_dev,col="blue",lty=3)
legend("topright",c("LASSO","SCAD","MCP"),inset=.05,
lty=c(1,2,3), # gives the legend appropriate symbols (lines)
col=c(1,2,"blue")) # gives the legend lines the correct color and width
dev.off()
