{
    "contents" : "# test for 07.cv_original.R\nrm(list=ls())\nsource(\"01.sample_generator.R\")\nsource(\"07.cv_esimator.R\")\n#source(\"07.temp_initial_finder.R\")\n#####################################################################################################\n#test for initial_universial_calculator\n#test for penalty indicator\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=5,\n                              lam_indicator=-99,\n                              penalty_indicator=\"lasso\")\n\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=5,\n                              lam_indicator=-99,\n                              penalty_indicator=\"SCAD\")\n\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=5,\n                              lam_indicator=-99,\n                              penalty_indicator=\"MCP\")\n#test for lam_indicator\n##from cv\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=5,\n                              lam_indicator=-98,\n                              penalty_indicator=\"lasso\")\n\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=5,\n                              lam_indicator=-98,\n                              penalty_indicator=\"SCAD\")\n\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=5,\n                              lam_indicator=-98,\n                              penalty_indicator=\"MCP\")\n## user input scalar\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=5,\n                              lam_indicator=-50,\n                              penalty_indicator=\"lasso\")\n\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=5,\n                              lam_indicator=-50,\n                              penalty_indicator=\"SCAD\")\n\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=5,\n                              lam_indicator=-50,\n                              penalty_indicator=\"MCP\")\n## user input vector\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=5,\n                              lam_indicator=c(1,2),\n                              penalty_indicator=\"lasso\")\n\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=5,\n                              lam_indicator=c(1,2),\n                              penalty_indicator=\"SCAD\")\n\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=5,\n                              lam_indicator=c(1,2),\n                              penalty_indicator=\"MCP\")\n#####################################################################################################\n#test for cv_calculator\ncv_calculator(lambda=0.1,sample_original=sample_original,logistic_list=logistic_list,k=k,penalty_indicator=\"wrong_input\")\ncv_calculator(lambda=0.1,sample_original=sample_original,logistic_list=logistic_list,k=k,penalty_indicator=\"lasso\")\ncv_calculator(lambda=0.1,sample_original=sample_original,logistic_list=logistic_list,k=k,penalty_indicator=\"SCAD\")\ncv_calculator(lambda=0.1,sample_original=sample_original,logistic_list=logistic_list,k=k,penalty_indicator=\"MCP\")\n\n#####################################################################################################\n#test for initial_universial_calculator\n#test for k\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=1,\n                              lam_indicator=0,\n                              penalty_indicator=\"lasso\")\ninitial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=2,\n                              lam_indicator=0,\n                              penalty_indicator=\"lasso\")\n\n#test for all penalty\np_vec <- c(\"lasso\",\"SCAD\",\"MCP\",\"wrong\")\nfor (i in p_vec){\n  sample1 <- sample_generator1(n=100,beta_vector=c(1.5,2,3,rep(0,5)))\n  sample_original <- subset(sample1$dataset,missing_indicator==1,select = -missing_indicator)\n  sample_logistics <- sample1$logistic_sample\n  test1 <- initial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=k,\n                                         lam_indicator=-99,\n                                         penalty_indicator=i)\n  plot(test1$lambda_path,test1$lambda_path_cv)\n#   initial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=k,\n#                                 lam_indicator=-98,\n#                                 penalty_indicator=i)\n#   initial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=k,\n#                                 lam_indicator=0,\n#                                 penalty_indicator=i)\n#   test2 <- initial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=k,\n#                                 lam_indicator=c(1,2,3),\n#                                 penalty_indicator=i)\n#   plot(test2$lambda_path,test2$lambda_path_cv)\n}\n\n#####################################################################################################\n#test for data drive plot\nk=5\ntest_time <- 10\nfor(i in 1:10){\n  sample1 <- sample_generator1(n=100,beta_vector=c(1.5,2,3,rep(0,5)))\n  sample_original <- subset(sample1$dataset,missing_indicator==1,select = -missing_indicator)\n  sample_logistics <- sample1$logistic_sample\n  lam_path1 <- glmnet(as.matrix(sample_logistics[,-1]),factor(sample_logistics[,1],levels=c(0,1)),family=\"binomial\")$lambda\n  lam_path1 <- lam_path1[seq(1,length(lam_path1),by=3)]\n  test1 <- initial_universial_calculator(sample_original=sample_original,sample_logistic=sample_logistic,k=k,\n                                         lam_indicator=lam_path1,\n                                         penalty_indicator=\"lasso\")\n  filename1 = paste(\"./data_driven_test/\",i,\"wrong_path_plot\",\".png\",sep = \"\")  \n  png(filename=filename1,units=\"in\", width=11, height=8.5, res=300)\n  plot(test1$lambda_path,test1$lambda_path_cv)\n  dev.off()\n}\n\n\n",
    "created" : 1444448202937.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2015288006",
    "id" : "9AB2F55E",
    "lastKnownWriteTime" : 1444427683,
    "path" : "~/Dropbox/YangYang/01.pseudo_likelihood_logistic_regression/wrong_cv_vector/07.99.test_for_07.cv_original.R",
    "project_path" : "07.99.test_for_07.cv_original.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}